@using VDMMutiline.Dao
@using VDMMutiline.SharedComponent.Constants
@using VDMMutiline.SharedComponent.EntityInfo
@using VDMMutiline.SharedComponent.Params
@using VDMMutiline.Ultilities
@using VDMMutiline.Core.UI
@model VDMMutiline.SharedComponent.EntityInfo.BK_BookingInfo
@{
    Layout = null;
    var daoticket = new BK_TicketDao();
    var lstve = GetListByBooking(Model.ID);
    var listCheckBaggageVnJq = new List<ApiClient.Models.BaggageVnJq>();
}
@functions
{

    private List<VDMMutiline.SharedComponent.EntityInfo.BK_PassengerInfo> GetbyBooking(int id)
    {
        var dao = new BK_PassengerDao();
        var param = new BK_PassengerParam() { BookingID = id };
        dao.GetbyBooking(param);
        return param.BK_PassengerInfos;
    }
    private List<BK_TicketInfo> GetListByBooking(int id)
    {
        var dao = new BK_TicketDao();
        return dao.GetListByBooking(id);
    }
}

<div class="modal fade text-left" id="TomTatVe" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header bg-dark white">
                <h4 class="modal-title white" id="myModalLabel17">Gửi SMS cho khách hàng</h4>
                <button type="button" class="close white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("sendsms", "DanhSachVe", FormMethod.Post, new { @onsubmit = "return validateFormfrCreatesms()", enctype = "multipart/form-data", @class = "form-horizontal", @data_parsley_validate = "", id = "frCreatesms", @role = "form" }))
                {
                    @Html.HiddenFor(z => z.ID)
                <div id="to-copy">
                    @{
                        foreach (var item in lstve)
                        {
                            <span id="lblName">@(UIUty.GetNamebyHang(item.Code))-code:<b> @item.CodeBook </b></span>
                            <br />
                        }
                    }
                    @{
                        var incontrail = "";

                        foreach (var item in GetbyBooking(Model.ID))
                        {
                            if (!incontrail.Contains(item.ID + ";"))
                            {

                                <b>
                                    @Utility.ConvertToUnsign(item.FirstName + " " + item.Name).ToUpper()
                                    @if (!Station.CheckQuocTe(item.FromCity, item.ToCity))
                                    {<span>(</span>
                                        @((!string.IsNullOrEmpty(item.BaggageDepartValue) ? item.BaggageDepartValue : "0") + "kg")
                                        if (lstve.Count > 1)
                                        {
                                            @((!string.IsNullOrEmpty(item.BaggageReturnValue) ? " - " + item.BaggageReturnValue : " - 0") + "kg")
                                        } <span>)</span>
                                    }
                                </b>
                                <br>
                            }
                            incontrail += item.ID + ";";
                        }
                    }
                    @{
                        var listAirlineCode = new List<string>();
                        var listTicketDetail = new List<VDMMutiline.SharedComponent.Entities.BK_TicketDetail>();
                        var objdi = lstve.FirstOrDefault(z => z.TypeID == Constant.Typeve.LuotDi);
                        if (objdi != null)
                        {
                            var lidetial = daoticket.GetDetailByTicket(objdi.ID);
                            listTicketDetail.AddRange(lidetial);
                            foreach (var item in lidetial)
                            {
                                listAirlineCode.Add(item.airlineCode);

                                var Departure = item;
                                <b>
                                    <span id="lblPhone">@Departure.flight @Departure.FromCity @Departure.ToCity @Departure.StartDate.Value.ToString("dd/MM") @Departure.StartDate.Value.ToString("HH:mm") </span>
                                </b>
                                <br>
                            }
                        }
                    }
                    @{
                        var objve = lstve.FirstOrDefault(z => z.TypeID == Constant.Typeve.LuotVe);
                        if (objve != null)
                        {

                            var lidetial = daoticket.GetDetailByTicket(objve.ID);
                            listTicketDetail.AddRange(lidetial);
                            foreach (var item in lidetial)
                            {
                                var Departure = item;

                                listAirlineCode.Add(item.airlineCode);
                                <b>
                                    <span id="lblPhone">@Departure.flight @Departure.FromCity @Departure.ToCity @Departure.StartDate.Value.ToString("dd/MM") @Departure.StartDate.Value.ToString("HH:mm") </span>
                                </b>
                                <br>
                            }
                        }
                    }
                    @if (listAirlineCode.Count(z => z != "VN") > 0)
                    {
                        <b>Xtay 7Kg</b>
                    }
                    else
                    {
                        ApiClient.Common.ApiClient apiClient = new ApiClient.Common.ApiClient();
                        if (objdi != null)
                        {
                            listCheckBaggageVnJq.AddRange(apiClient.GetBaggageVnJq(objdi.FromCity, objdi.ToCity));
                        }
                        if (objve != null)
                        {
                            listCheckBaggageVnJq.AddRange(apiClient.GetBaggageVnJq(objve.FromCity, objve.ToCity));
                        }

                        var ishow12kg = true;
                        foreach (var item in listTicketDetail)
                        {
                            var lst = listCheckBaggageVnJq.Where(z => z.StartPoind == item.FromCity && z.EndPoind == item.ToCity);
                            if (WebProject.Ultilities.BaggageVnUti.CheckBaggageVnJq(lst.ToList(), item.flight))
                            {
                                ishow12kg = false;
                            }
                        }
                        if (ishow12kg)
                        {
                            <b>Xtay 12Kg</b>
                        }
                        else
                        {
                            <b>Xtay 7Kg</b>
                        }
                    }

                    <br />
                    <span id="lblEmail">
                        GIA:<b>
                            @{
                                var gia = Model.TotalPrice.Value.ToString("n0");
                                var gialent = gia.Length;
                            }
                            @(Model.TotalPrice.HasValue ? (gialent > 4 ? gia.Remove(gialent - 4, 4) + "K" : gia) : "")
                        </b>
                    </span>
                    <br />
                    <span id="lblNote">Tinh trang:<b> @Utility.ConvertToUnsign(Utility.GetDictionaryValue(Constant.StatusVe.dctName, Model.Status)).ToUpper()</b></span>
                    <br />
                    <span id="lblNote">
                        Chi tiet xin lh:<b>
                            @{
                                var obj = VDMMutiline.Core.UI.CommonUI.GetInforByUserOrUserParent(Model.UserCreate);
                                if (obj != null)
                                {
                                    @obj.PhoneNumber
                                }
                            }
                        </b>
                    </span>
                </div>

                    <a style="padding: 4px 20px;position: absolute;right: 15px;bottom: 10px;" class="btn btn-info" id="copy" href="javascript:void(0)">Copy</a>

                    @*<div class="modal-footer">
                            @{
                                if (UserInfo.GroupId != 2 && UserInfo.GroupId != 1 && UserInfo.GroupId != 11)
                                {
                                    @Html.TextBoxFor(z => z.Phone, new { @required = "Required", @class = "form-control", @style = "float: left;width: 200px;" })
                                    <button id="submitbtsms" type="submit" style="float: left; height: 34px; margin-left: 10px; padding-top: 3px;" class="btn btn-info">
                                        <i class="ace-icon fa fa-check bigger-110"></i>Gửi SMS
                                    </button>
                                }
                            }

                        </div>*@
                }
            </div>
        </div>
    </div>
</div>

<script src="/Content/Copy/clipboard.min.js"></script>
<script>
    var clipboard = new Clipboard('#copy', {
        target: function () {
            $('#copy').text("COPYED");
            return document.querySelector('#to-copy');

        }
    });

    clipboard.on('success', function (e) {
        console.log(e);
    });

    clipboard.on('error', function (e) {
        console.log(e);
    });
</script>

<script>

    function validateFormfrCreatesms() {
        var isDisabled = $("#submitbtsms").is(':disabled');
        if (!isDisabled) {
            $("#submitbtsms").attr("disabled", true);
            return true;
        } else {

            return false;
        }
    }
</script>