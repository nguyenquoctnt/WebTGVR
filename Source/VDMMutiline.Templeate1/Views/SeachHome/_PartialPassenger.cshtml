@using VDMMutiline.SharedComponent.Constants
@using System.Linq;
@model VDMMutiline.SeachAndBook.SeachParam
@{
    var listBaggageDepart = new List<ApiClient.Models.Baggage>();
    var listBaggageReturn = new List<ApiClient.Models.Baggage>();
    if (Model.BaggageInfo != null)
    {
        if (Model.BaggageInfo.ListBaggage == null)
        {
            Model.BaggageInfo.ListBaggage = new List<ApiClient.Models.Baggage>().ToArray();
        }
        listBaggageDepart = Model.BaggageInfo.ListBaggage.Where(z => z.Route == Model.DepartureAirportCode + Model.DestinationAirportCode).ToList();
        if (listBaggageDepart.Count() > 0)
        {
            var list = new List<ApiClient.Models.Baggage>();
            list.Insert(0, new ApiClient.Models.Baggage() { Code = "", Name = "Chọn hành lý ký gửi" });
            listBaggageDepart = (from Baggage in listBaggageDepart
                                 select new ApiClient.Models.Baggage()
                                 {
                                     Currency = Baggage.Currency,
                                     Airline = Baggage.Airline,
                                     Name = "Tổng khối lượng " + Baggage.Name + ":" + Baggage.Price.ToString("n0") + " " + Baggage.Currency,
                                     Code = Baggage.Code,
                                     Route = Baggage.Route,
                                     Leg = Baggage.Leg,

                                 }).ToList();
            list.AddRange(listBaggageDepart.ToList());
            listBaggageDepart = list;
        }
        listBaggageReturn = Model.BaggageInfo.ListBaggage.Where(z => z.Route == Model.DestinationAirportCode + Model.DepartureAirportCode).ToList();
        if (listBaggageReturn.Count > 0)
        {

            var list = new List<ApiClient.Models.Baggage>();
            list.Insert(0, new ApiClient.Models.Baggage() { Code = "", Name = "Chọn hành lý ký gửi" });
            listBaggageReturn = (from Baggage in listBaggageReturn
                                 select new ApiClient.Models.Baggage
                                 {
                                     Currency = Baggage.Currency,
                                     Airline = Baggage.Airline,
                                     Name = "Tổng khối lượng " + Baggage.Name + ":" + Baggage.Price.ToString("n0") + " " + Baggage.Currency,
                                     Code = Baggage.Code,
                                     Route = Baggage.Route,
                                     Leg = Baggage.Leg,
                                 }).ToList();
            list.AddRange(listBaggageReturn.ToList());
            listBaggageReturn = list;
        }
    }
}

<input type="hidden" id="hdfNumbPax" value="@(Model.Adult+Model.Children)">

<input type="hidden" name="TotalBaggagePrice" id="hdfTotalBaggagePrice" value="300000">
<style>
    select.ui-datepicker-year {
        background: #fff;
        border-radius: 3px;
        height: 20px;
        -moz-border-radius: 3px;
        -webkit-border-radius: 3px;
        padding: 0 5px;
        border: 1px solid #fdb714;
        color: #616161;
        font-weight: normal;
    }

    .ui-datepicker td span, .ui-datepicker td a {
        display: block;
        padding: 0em .5em;
        text-align: right;
        text-decoration: none;
    }

    .ui-datepicker {
        width: auto;
        padding: .2em .2em 0;
        display: none;
    }
</style>


@if (Model.BaggageInfo != null)
{
    for (int i = 0; i < Model.BaggageInfo.ListBaggage.ToList().Count; i++)
    {
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Code);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Airline);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Currency);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Name);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Price);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Value);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Route);
        @Html.HiddenFor(z => Model.BaggageInfo.ListBaggage[i].Leg);
    }
    foreach (var item in Model.BaggageInfo.ListBaggage)
    {
        <input type="hidden" id="hdfBaggage_@item.Code@item.Route" value="@item.Price" />
    }
}
<div class="box_top"><div class="fa fa-users"></div>Danh sách hành khách</div>
<div class="WhiteBox NoTop border-radius-bottom">


    @for (int i = 0; i < Model.Passengerlist.Count; i++)
    {
        @Html.HiddenFor(model => Model.Passengerlist[i].TypeID)
        switch (Model.Passengerlist[i].TypeID)
        {
            case 1:
                {

                    <div class="PaxInfo">
                        <div class="PaxTitle">
                            <div class="text1">@(i + 1). Người lớn</div>
                        </div>

                        <div class="clearfix PaxInfoContent">
                            <input type="hidden" name="hdfPaxType" id="hdfPaxType" value="ADT">
                            <div class="placeholder gender">
                                <span class="control-intro">Giới tính</span> <span class="required">*</span>
                                @Html.DropDownListFor(model => Model.Passengerlist[i].Sex, Constant.Gender.dctName.Select(s =>
                                new SelectListItem { Selected = s.Key == Model.Passengerlist[i].Sex, Text = s.Value, Value = s.Key }),
                         new { @required = "required", @class = "TextBox sexoption" })
                            </div>
                            <div class="placeholder first-name">
                                <span class="control-intro">Họ tên</span> <span class="required">*</span>
                                @Html.TextBoxFor(x => x.Passengerlist[i].FullName, new {@data_parsley_FullnameValidate="", @style = "text-transform: uppercase;", @required = "required", @class = "TextBox", @placeholder = "Họ và tên" })
                            </div>
                            <div class="placeholder birthday" style="display: none">
                                <span class="control-intro">Ngày sinh</span>
                                <input name='@string.Format("txtDate{0}",i)' type="text" id="@string.Format("txtDate{0}",i)" placeholder="Ngày sinh" class="TextBox">
                            </div>
                            <div class="clear"></div>
                        </div>
                        <div id="pnBaggage1" class="clearfix" style="">
                            <div class="TextTitle">
                                <a id="LinkAdditionServiceDetail1" href="javascript:void(0)" class="details_selected">
                                    Hành lý ký gửi
                                </a>
                            </div>
                            <div class="PaxInfoContent" id="AdditionServiceDetail1">
                                @if (Model.BaggageInfo != null)
                                {
                                    if (listBaggageDepart.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageDepart1" style="">
                                                <div class="control-intro">
                                                    <span id="lblBaggages">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Outbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageDepartID, listBaggageDepart.Select(s =>
                                                                new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageDepartID, Text = s.Name, Value = s.Code }),
                                                                new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>
                                                <div class="clear"></div>
                                            </div>
                                        </div>
                                    }
                                    if (listBaggageReturn.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageReturn1" style="">
                                                <div class="control-intro">
                                                    <span id="Label2">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Inbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageReturnID, listBaggageReturn.Select(s =>
                                                                new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageReturnID, Text = s.Name, Value = s.Code }),
                                                                new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>

                                            </div>
                                        </div>
                                    }
                                }
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>
                    break;
                }
            case 2:
                {
                    <div class="PaxInfo">
                        <div class="PaxTitle">
                            <div class="text1">@(i + 1). @VDMMutiline.Resource.App_GlobalResources.weblanguage.Children</div>
                        </div>
                        <div class="clear"></div>
                        <div class="PaxInfoContent">
                            <input type="hidden" name="hdfPaxType" id="hdfPaxType" value="ADT">
                            <div class="placeholder gender">
                                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Sex</span> <span class="required">*</span>
                                @Html.DropDownListFor(model => Model.Passengerlist[i].Sex, Constant.Gender.dctName.Select(s =>
                                new SelectListItem { Selected = s.Key == Model.Passengerlist[i].Sex, Text = s.Value, Value = s.Key }),
                         new { @required = "required", @class = "TextBox sexoption" })
                            </div>
                            <div class="placeholder first-name">
                                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name</span> <span class="required">*</span>
                                @Html.TextBoxFor(x => x.Passengerlist[i].FullName, new {@data_parsley_FullnameValidate="", @style = "text-transform: uppercase;", @required = "required", @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name })
                            </div>
                            <div class="placeholder first-name">
                                <div class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Birthday</div>
                                <div class="placeholder birthday">
                                    <input readonly name='@string.Format("txtDate{0}",i)' type="text" id="@string.Format("txtDate{0}",i)" value="@(Model.Passengerlist[i].Birthday.HasValue?Model.Passengerlist[i].Birthday.Value.ToString("dd/MM/yyyy"):"")" placeholder="Ngày sinh" class="TextBox">
                                </div>
                            </div>
                            <div class="clear"></div>
                        </div>
                        <div id="pnBaggage1" style="">
                            <div class="TextTitle">
                                <a id="LinkAdditionServiceDetail1" href="javascript:void(0)" class="details_selected">
                                    @VDMMutiline.Resource.App_GlobalResources.weblanguage.Addition_services
                                </a>
                            </div>
                            <div class="PaxInfoContent" id="AdditionServiceDetail1">
                                @if (Model.BaggageInfo != null)
                                {
                                    if (listBaggageDepart.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageDepart1" style="">
                                                <div class="control-intro">
                                                    <span id="lblBaggages">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Inbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageDepartID, listBaggageDepart.Select(s =>
                                                                        new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageDepartID, Text = s.Name, Value = s.Code }),
                                                                        new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>
                                                <div class="clear"></div>
                                            </div>
                                        </div>
                                    }
                                    if (listBaggageReturn.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageReturn1" style="">
                                                <div class="control-intro">
                                                    <span id="Label2">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Outbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageReturnID, listBaggageReturn.Select(s =>
                                                                        new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageReturnID, Text = s.Name, Value = s.Code }),
                                                                        new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>

                                            </div>
                                        </div>
                                    }
                                }
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>

                    break;
                }
            case 3:
                {
                    <div class="PaxInfo">
                        <div class="PaxTitle">
                            <div class="text1">@(i + 1). @VDMMutiline.Resource.App_GlobalResources.weblanguage.Infants</div>
                        </div>
                        <div class="clear"></div>
                        <div class="PaxInfoContent">
                            <input type="hidden" name="hdfPaxType" id="hdfPaxType" value="ADT">
                            <div class="placeholder gender">
                                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Sex</span> <span class="required">*</span>
                                @Html.DropDownListFor(model => Model.Passengerlist[i].Sex, Constant.Gender.dctName.Select(s =>
                                new SelectListItem { Selected = s.Key == Model.Passengerlist[i].Sex, Text = s.Value, Value = s.Key }),
                         new { @required = "required", @class = "TextBox sexoption" })
                            </div>
                            <div class="placeholder first-name">
                                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name</span> <span class="required">*</span>
                                @Html.TextBoxFor(x => x.Passengerlist[i].FullName, new {@data_parsley_FullnameValidate="", @style = "text-transform: uppercase;", @required = "required", @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name })
                            </div>
                            <div class="placeholder first-name">
                                <div class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Birthday</div>
                                <div class="placeholder birthday">
                                    <input readonly name='@string.Format("txtDate{0}",i)' type="text" id="@string.Format("txtDate{0}",i)" value="@(Model.Passengerlist[i].Birthday.HasValue?Model.Passengerlist[i].Birthday.Value.ToString("dd/MM/yyyy"):"")" placeholder="Ngày sinh" class="TextBox">
                                </div>
                            </div>
                            <div class="clear"></div>
                        </div>
                        <div id="pnBaggage1" style="">
                            <div class="TextTitle">
                                <a id="LinkAdditionServiceDetail1" href="javascript:void(0)" class="details_selected">
                                    @VDMMutiline.Resource.App_GlobalResources.weblanguage.Addition_services
                                </a>
                            </div>
                            <div class="PaxInfoContent" id="AdditionServiceDetail1" style="display: none">
                                @if (Model.BaggageInfo != null)
                                {
                                    if (listBaggageDepart.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageDepart1" style="">
                                                <div class="control-intro">
                                                    <span id="lblBaggages">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Inbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageDepartID, listBaggageDepart.Select(s =>
                                                                        new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageDepartID, Text = s.Name, Value = s.Code }),
                                                                        new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>
                                                <div class="clear"></div>
                                            </div>
                                        </div>
                                    }
                                    if (listBaggageReturn.Count() > 0)
                                    {
                                        <div class="placeholder baggage">
                                            <div id="pnBaggageReturn1" style="">
                                                <div class="control-intro">
                                                    <span id="Label2">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Baggage</span> @VDMMutiline.Resource.App_GlobalResources.weblanguage.Outbound_flight:
                                                    @Html.DropDownListFor(model => Model.Passengerlist[i].BaggageReturnID, listBaggageReturn.Select(s =>
                                                                        new SelectListItem { Selected = s.Code == Model.Passengerlist[i].BaggageReturnID, Text = s.Name, Value = s.Code }),
                                                                        new { @onchange = "AddBaggage()", @class = "TextBox" })
                                                </div>

                                            </div>
                                        </div>
                                    }
                                }
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>
                    break;

                }
        }
        var mindate = DateTime.Now.AddYears(-80);
        var maxdate = DateTime.Now;
        if (Model.Passengerlist[i].TypeID == 2)
        {
            mindate = DateTime.Now.AddYears(-12);
            maxdate = DateTime.Now.AddYears(-2);
        }
        else if (Model.Passengerlist[i].TypeID == 3)
        {
            mindate = DateTime.Now.AddYears(-2);
            maxdate = DateTime.Now;
        }
        <script>
            $(document).ready(function () {


                $("#@string.Format("txtDate{0}", i)").datepickerlunar({
                    numberOfMonths: 1,
                    changeMonth: true,
                    changeYear: true,
                    showButtonPanel: true,
                    showAnim: "show",
                    dateFormat: "dd/mm/yy",
                    maxDate: new Date('@(maxdate.ToString("yyyy-MM-dd"))'),
                    minDate: new Date('@(mindate.ToString("yyyy-MM-dd"))'),
                    onSelect: function (selectedDate) {
            }
        });
    });
        </script>
    }
</div>
<div class="box_top"><div class="fa fa-phone-square"></div>@VDMMutiline.Resource.App_GlobalResources.weblanguage.Contact_information</div>
<div class="WhiteBox NoTop border-radius-bottom">
    @Html.HiddenFor(z => Model.BkBooking.Status)
    @Html.HiddenFor(z => Model.BkBooking.FromCity)
    @Html.HiddenFor(z => Model.BkBooking.ToCity)
    @Html.HiddenFor(z => Model.BkBooking.FlightDepart)
    @Html.HiddenFor(z => Model.BkBooking.FlightReturn)
    @Html.HiddenFor(z => Model.BkBooking.TotalPrice)
    <div id="ContactInfo" class="PaxInfo NoBottom">
        <div class="placeholder contact-gender">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Sex</span>
            <select name="ddlContactTitle" id="ddlContactTitle" required class="TextBox sexoption">
                <option value="0" >@VDMMutiline.Resource.App_GlobalResources.weblanguage.Mr</option>
                <option value="1">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Mrs</option>
            </select>
        </div>
        <div class="placeholder contact-full-name">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name</span> <span class="required">*</span>
            @Html.TextBoxFor(x => Model.BkBooking.Name, new {@data_parsley_FullnameValidate="", @style = "text-transform: uppercase;", @required = "required", @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Full_name })
        </div>
        <div class="placeholder contact-phone">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Phone_number</span> <span class="required">*</span>
            @Html.TextBoxFor(x => Model.BkBooking.Phone, new
            {
              @data_parsley_minlength = "8",
                @data_parsley_maxlength = "10",
                   @data_parsley_minlength_message = "Nhập ít nhất 8 ký tự.",
                    @data_parsley_maxlength_message = "Nhập tối đa 10 ký tự",
                @data_parsley_type = "number",
                @required = "required",
                @class = "TextBox",
                @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Phone_number
            })
        </div>
        <div class="clear"></div>
        <div class="placeholder contact-email">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Email</span> <span class="required">*</span>
            @Html.TextBoxFor(x => Model.BkBooking.Email, new { @type = "email", @data_parsley_type = "email", @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Email })
        </div>
        <div class="placeholder contact-address">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Address</span>
            @Html.TextBoxFor(x => Model.BkBooking.Address, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Address })
        </div>
        <div class="clear"></div>
        <div class="placeholder contact-note">
            <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Special_requirements</span>
            @Html.TextAreaFor(x => Model.BkBooking.Note, new { @rows = "2", @cols = "20", @class = "TextBox RemarkTextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Special_requirements })
        </div>
        <div class="clear"></div>
        <div class="TextTitle">
            <input id="ckbShowInvoiceInfo" name="ckbShowInvoiceInfo" type="checkbox"><label for="ckbShowInvoiceInfo">@VDMMutiline.Resource.App_GlobalResources.weblanguage.I_want_an_invoice</label>
        </div>
        <div id="pnInvoiceInfo" style="display:none">
            <div class="placeholder invoice">
                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Company_name</span>
                @Html.TextBoxFor(x => Model.BkBooking.xhdtencongty, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Company_name })

            </div>
            <div class="placeholder invoice">
                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Address</span>

                @Html.TextBoxFor(x => Model.BkBooking.xhddiachi, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Address })
            </div>
            <div class="placeholder invoice">
                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.City</span>

                @Html.TextBoxFor(x => Model.BkBooking.xhdthanhpho, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.City })
            </div>
            <div class="placeholder invoice">
                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Receiver_invoice</span>

                @Html.TextBoxFor(x => Model.BkBooking.xhdnguoinhanhd, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Receiver_invoice })
            </div>
            <div class="placeholder invoice">
                <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.VAT_number</span>

                @Html.TextBoxFor(x => Model.BkBooking.xhdvat, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.VAT_number })
            </div>
            <div class="placeholder invoice">
                <span class="control-intro"></span>
                <div class="Line35 FloatLeft"></div>
            </div>
            <div class="clear"></div>

            <div class="TextTitle">
                <span onchange="Toggle('OtherOrderAddressInfo', '')">
                    <input id="ckbSendToOtherAddress" type="checkbox" name="ckbSendToOtherAddress">
                    <label for="ckbSendToOtherAddress">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Other_invoice_address</label>
                </span>
            </div>
            <div id="OtherOrderAddressInfo" style="display:none">
                <div class="placeholder invoice">
                    <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Company_name</span>
                    @Html.TextBoxFor(x => Model.BkBooking.xhdktencongty, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Company_name })
                </div>
                <div class="placeholder invoice">
                    <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Address</span>
                    @Html.TextBoxFor(x => Model.BkBooking.xhdkdiachi, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Address })
                </div>
                <div class="placeholder invoice">
                    <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.City</span>
                    @Html.TextBoxFor(x => Model.BkBooking.xhdktp, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.City })
                </div>
                <div class="placeholder invoice">
                    <span class="control-intro">@VDMMutiline.Resource.App_GlobalResources.weblanguage.Receiver_invoice</span>
                    @Html.TextBoxFor(x => Model.BkBooking.xhdknguoinhanhd, new { @class = "TextBox", @placeholder = @VDMMutiline.Resource.App_GlobalResources.weblanguage.Receiver_invoice })
                </div>
                <div class="placeholder invoice">
                    <span class="control-intro"></span>
                    <div class="Line35 FloatLeft"></div>
                </div>
                <div class="clear"></div>
            </div>
        </div>
    </div>
</div>

<div class="box_top" style="display:none !important"><div class="fa fa-tag"></div>MÃ GIẢM GIÁ</div>
<div class="WhiteBox NoTop border-radius-bottom" style="display:none !important">
    <div class="PaxInfo NoBottom">
        <input type="hidden" id="idcode" name="idcode" />
        <div class="placeholder contact-email">
            <input id="txtVoucherCode" placeholder="Mã giảm giá" name="txtVoucherCode" class="TextBox">
        </div>
        <div class="placeholder contact-email">
            <a id="Button1" onclick="checkvoucher()" text="" style="color: #fff;font-size: 10px;padding: 9px 20px;border-radius: 7px;" class="ButtonGreen">Áp dụng</a>
        </div>
        <div class="placeholder contact-note">
            <span id="err" class="italicMessages" style="color: red; display: block"></span>
        </div>
        <div id="contenvoucher" style="display: none">
            <div class="placeholder contact-note">
                <div class="col-md-12">
                    <label class="money col-md-2 col-xs-2 col-lg-2 col-sm-2" style="padding-left: 0px;padding-right: 0px">Giá cũ:</label>
                    <div class="col-md-10 col-xs-10 col-lg-10 col-sm-10 " style="padding-right: 0px;margin-top: -4px;">
                        <span id="giacu" style="font-size: 17px;text-decoration: line-through;">giacu</span>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="money col-md-2 col-xs-2 col-lg-2 col-sm-2" style="padding-left: 0px;padding-right: 0px">KM:</label>
                    <div class="col-md-10 col-xs-10 col-lg-10 col-sm-10" style="padding-right: 0px;margin-top: -4px;">
                        <span id="KM" style="font-size: 17px;">giacu</span>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="money col-md-2 col-xs-2 col-lg-2 col-sm-2" style="padding-left: 0px;padding-right: 0px">Giá mới:</label>
                    <div class="col-md-10 col-xs-10 col-lg-10 col-sm-10" style="padding-right: 0px;margin-top: -4px;">
                        <span id="GiaMoi" style="color: red;font-size: 17px;">giacu</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="placeholder contact-note">
            <span class="italicMessages" style="display: block;">Dành cho khách hàng có mã giảm giá/giới thiệu</span>
            <span class="italicMessages" style="color: red; display: block">Lưu ý: Mỗi mã chỉ có giá trị sử dụng cho một lần đặt vé</span>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<script>
    

    //$(document).ready(function () {

    //    var myOption = "<option selected disabled>Chọn</option>";
    //    var index = 1;
    //    $(myOption).insertBefore(".sexoption option:nth-child(" + index + ")");
    //});
    $("#ckbShowInvoiceInfo").off('change').on('change', function () {
        if (this.checked) {
            $("#pnInvoiceInfo").attr("style", "display:block");
        } else {
            $("#pnInvoiceInfo").attr("style", "display:none");
        }
    });
    function checkvoucher() {
        $("#err").text('');
        if ($("#txtVoucherCode").val().trim() == '') {
            return;
        }
        $('#popub').bPopup({
            modalClose: false,
            opacity: 0.6,
            positionStyle: 'fixed'
        });
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("CheckVoucher", "SeachHome")",
            data: "{searchParam:'" + $("#txtVoucherCode").val() + "',trongnuoc:'1'}",
            dataType: "json",
            success: function (data) {
                if (data.TongTien != '0') {
                    $("#contenvoucher").attr("style", "display:block");
                    $("#giacu").text(data.TongTien);
                    $("#KM").text(data.km);
                    $("#GiaMoi").text(data.giamoi);
                    $('#popub').bPopup().close();

                } else {
                    $("#contenvoucher").attr("style", "display:none");
                    $("#giacu").text('');
                    $("#KM").text('');
                    $("#GiaMoi").text('');
                    $('#popub').bPopup().close();
                    $("#err").text('Không tìm thấy mã này hoặc mã này đã hết hạn.');
                }
            }
        });
    }
</script>
<script>
    function AddBaggage() {
        var totalBaggagePrice = 0;
        var grandPrice = Number($("#hdfGrandPrice").val());
        var paxNumb = Number($("#hdfNumbPax").val());
        for (var i = 1; i < paxNumb + 1; i++) {
            var valuedepart = $("#Passengerlist_" + (i - 1) + "__BaggageDepartID").val();
            var valuereturn = $("#Passengerlist_" + (i - 1) + "__BaggageReturnID").val();
            if (valuedepart != "0" || valuereturn != "0") {
                if (valuedepart != "0" && valuedepart != "" && valuedepart != null) {
                    totalBaggagePrice += Number($("#hdfBaggage_" + valuedepart+'@Model.DepartureAirportCode@Model.DestinationAirportCode').val());
                }
                if (valuereturn != "0" && valuereturn != "" && valuereturn != null) {
                    totalBaggagePrice += Number($("#hdfBaggage_" + valuereturn+'@Model.DestinationAirportCode@Model.DepartureAirportCode').val());
                }
            }
            $("#lblTotalAdditionService").text(format("#.##0,####", totalBaggagePrice));
        }

        grandPrice += totalBaggagePrice;
        $('#lblBasketGrandTotal').html(format("#.##0,####", grandPrice));
    }
</script>