@model VDMMutiline.SharedComponent.EntityInfo.AddOnService.ConfirmAddOnServiceInfo
@using VDMMutiline.SharedComponent.Constants
@using VDMMutiline.Dao
@using VDMMutiline.Ultilities
@{

}
<div class="card">
    <div class="card-header danhsach">
        <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
        <div class="heading-elements">
            <ul class="list-inline mb-0">
                <li class="addnew">
                </li>
                <li class="fullscree"><a data-action="expand"><i class="ft-maximize"></i></a></li>
            </ul>
        </div>
    </div>
    @{
        Html.RenderPartial("~/Areas/Issue/Views/TicketInfo/_PartialInfoTickKetNotPass.cshtml", Model.BookingInfo);
    }
    @if (string.IsNullOrEmpty(ViewBag.erro))
    {
        <div class="card-content collapse show" id="div-submit">
            <div class="card-body card-dashboard">
                @using (Html.BeginForm("AddOnService", "AddOnService", FormMethod.Post, new { @id = "frmConfirmIssue", @class = "form form-horizontal", @data_parsley_validate = "", @role = "form" }))
                {
                    @Html.HiddenFor(z => z.AddOnServiceInfo.AirlineCode)
                    @Html.HiddenFor(z => z.AddOnServiceInfo.BookingCode)
                    <div class="form-body">
                        @if (Model.PassgerInfo != null)
                        {
                            var daobagg = new VDMMutiline.Dao.BaggageDao();
                            var lstbagage = daobagg.GetlistByAirlineCode(Model.BookingInfo.AirlineCode);
                            lstbagage.Insert(0, new VDMMutiline.SharedComponent.EntityInfo.BaggageInfo { Code = "", Name = "Chọn hành lý" });
                            <div class="card-content collapse show">
                                <div class="card-body card-dashboard">
                                    <h4 class="form-section"><i class="icon-list"></i>Hành khách</h4>
                                    <div class="form-group ">
                                        <table class="booking table table-striped table-bordered zero-configuration">
                                            <thead>
                                                <tr>
                                                    <th>Loại hành khách</th>
                                                    <th>Họ tên</th>
                                                    <th>Ngày sinh</th>
                                                    <th>Hành trình</th>
                                                    <th>H.Lý</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (var i = 0; i < Model.PassgerInfo.Count; i++)
                                                {
                                                    <tr class="gradeA">
                                                        <td>
                                                            @Html.HiddenFor(z => Model.PassgerInfo[i].TicketRoute)
                                                            @Html.HiddenFor(z => Model.PassgerInfo[i].Index)
                                                            @Model.PassgerInfo[i].Type
                                                        </td>
                                                        <td>@(Model.PassgerInfo[i].FirstName.ToUpper() + " " + Model.PassgerInfo[i].LastName.ToUpper())</td>
                                                        <td>@(Model.PassgerInfo[i].Birthday.HasValue? Model.PassgerInfo[i].Birthday.Value.ToString("dd/MM/yyyy"):"")</td>
                                                        <td>
                                                            @Model.PassgerInfo[i].TicketRoute
                                                        </td>
                                                        <td>
                                                            @if (!string.IsNullOrEmpty(Model.PassgerInfo[i].BaggageValue))
                                                            {
                                                                @(Model.PassgerInfo[i].BaggageValue)@("kg ") @(Model.PassgerInfo[i].BaggagePrice.ToString("n0") + "VND")
                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownListFor(x => Model.PassgerInfo[i].BaggageCode, lstbagage.Select(n => new SelectListItem { Text = (n.Name + " - " + (+n.Price ?? 0).ToString("n0")), Value = n.Code }), new { @class = "form-control", @placeholder = "" })
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="form-group row">
                            <label class="col-md-2 label-control text-left">Remark </label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(z => z.AddOnServiceInfo.Remark, new { @required = "required", @class = "form-control border-primary" })
                            </div>
                            <div class="col-md-2">
                                <button type="button" onclick="submitform()" id="btnxuatve" class="btn btn-info btn-block">Mua hành lý</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

</div>
<script>
    function submitform() {
        $( "#div-submit" ).attr( "disabled", "disabled" );
           var formvalidate = $('#frmConfirmIssue');
            formvalidate.parsley().validate()
            if (formvalidate.parsley().isValid() == true) {
                var form = $('form#frmConfirmIssue').get(0);
                var fd = new FormData(form);
                _lwfunc.AjaxNoprocessData("@Url.Action("AddOnService", "AddOnService", new { @area = "AddOns" })", fd, function (data) {
                    if (data.isSuccess === true) {
                        toastr.success( data.mess, "Thông báo!" );
                        setTimeout( function () {   window.location.href = "@Url.Action("Index", "AddOnService")"; }, 500 );
                    } else {
                        toastr.error( data.mess, "Thông báo!" );
                        $( "#div-submit" ).removeAttr( "disabled");
                    }

                });
            }
            }
</script>
