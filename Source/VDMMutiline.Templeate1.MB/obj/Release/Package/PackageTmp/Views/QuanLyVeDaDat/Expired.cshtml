@using VDMMutiline.SharedComponent.Constants
@using VDMMutiline.SharedComponent.EntityInfo
@using VDMMutiline.SharedComponent.Params
@using VDMMutiline.Dao
@using VDMMutiline.Ultilities
@using VDMMutiline.Core.UI
@using PagedList.Mvc
@model VDMMutiline.SharedComponent.Params.BK_BookingParam
@{
    VDMMutiline.Core.Models.VDMUser userinfor = null;
    userinfor = (VDMMutiline.Core.Models.VDMUser)ViewBag.userinfor;
    ViewBag.Title = "Quản lý vé";
    ViewBag.Description = " Danh sách vé sắp hết thời gian giữ chỗ";
    Layout = "~/Views/Shared/_LayouQuanLyVe.cshtml";
}

@functions
{
    private string ThongTinChuyenBay(BK_TicketInfo TicketInfo)
    {
        var obj = TicketInfo;
        string value = "";
        if (obj != null)
        {
            value = string.Format("{0} {1} {2} {3} {4} {5} {6}", obj.FlightNo, (obj.StartDate.HasValue ? obj.StartDate.Value.Day.ToString() : "") + UIUty.MonthName(obj.StartDate.HasValue ? obj.StartDate.Value.Month : 0), obj.FromCity, obj.ToCity,
                obj.StartDate.HasValue ? obj.StartDate.Value.ToString("HH:mm").Replace(":", "") : "",
                obj.EndDate.HasValue ? obj.EndDate.Value.ToString("HH:mm").Replace(":", "") : "", obj.Class);
        }
        return value;
    }
    private List<BK_TicketInfo> GetlistTicket(int bookingid)
    {
        var dao = new BK_TicketDao();
        return dao.GetListByBooking(bookingid);
    }
}
<div class="card">
  
    <div class="card-content collapse show">
        <div class="card-body card-dashboard">
            <div class="form form-horizontal" style="margin-bottom: 15px;">
                @using (Html.BeginForm("Expired", "QuanLyVeDaDat", FormMethod.Post, new { @role = "form" }))
                {
                    <div class="row">
                        <div class="col-md-4 mt-1 p-0">
                            <div class="form-group ">
                                <label class="col-md-12 label-control">Chuỗi tìm kiếm</label>
                                <div class="col-md-12 position-relative mb-0">
                                    @Html.TextBoxFor(x => Model.BookingFilter.Search, new { @class = "form-control", @placeholder = "Code,mã đơn hàng, email, số điện thoại" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mt-1 p-0">
                            <div class="form-group ">
                                <label class="col-md-12 label-control">Booker</label>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(x => Model.BookingFilter.TaiKhoan, Model.UserInfos.Select(n => new SelectListItem { Selected = n.UserName == Model.BookingFilter.TaiKhoan, Text = n.UserName, Value = n.UserName }), new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mt-1 p-0">
                            <div class="form-group ">
                                <label class="col-md-12 label-control">Hãng vận chuyển</label>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(x => Model.BookingFilter.AirlineCode, Model.AirlineInfos.Select(n => new SelectListItem { Selected = n.Code == Model.BookingFilter.AirlineCode, Text = n.Name, Value = n.Code }), new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 p-0">
                            <div class="form-group ">
                                <label class="col-md-12 label-control" style="min-height: 20px"></label>
                                <div class="col-md-12 mt-2">
                                    <button type="submit" id="btnSearch" class="btn btn-info btn-block"><span class="ace-icon fa fa-search icon-on-right bigger-110"></span>Tìm kiếm</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="table-responsive">
                <div class="tableconte">
                    <table id="dynamic-table" class=" booking table table-striped table-bordered zero-configuration">
                        <thead>
                            <tr>
                                <th>Mã đơn hàng</th>
                                <th>Mã đặt chỗ</th>
                                <th>Giá vé</th>
                                <th>Thông tin chuyến bay</th>
                                <th>Điện thoại</th>
                                <th>Trạng thái</th>
                                <th>Ngày đặt</th>
                                <th>Ghi chú</th>
                                <th style="white-space: nowrap;">Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.PagedList != null)
                            {
                                foreach (var item in (Model.PagedList))
                                {
                                    //rowIndex++;
                            <tr class="gradeA">
                                @*<td>@rowIndex</td>*@
                                <td>
                                    <a href="@Url.Action("Create", "QuanLyVeDaDat", new { id = item.ID })">
                                        @item.rCode
                                    </a>
                                </td>
                                 <td>
                                    @if (string.IsNullOrWhiteSpace(item.BookCode))
                                    {
                                        @item.FailCode
                                    }
                                    else
                                    {
                                        @item.BookCode
                                    }
                                </td>

                                <td>
                                    @{
                                        var color = "";
                                        var objthanhtoan = item.PaymentInfo;
                                        if (objthanhtoan != null)
                                        {
                                            if (objthanhtoan.IdHinhThuc == Constant.Hinhthucthanhtoav2.chuyenkhoan)
                                            {
                                                color = "#0b388e";
                                            }
                                            else if (objthanhtoan.IdHinhThuc == Constant.Hinhthucthanhtoav2.Giaovetannha)
                                            {
                                                color = "#f78e0c";
                                            }
                                            else if (objthanhtoan.IdHinhThuc == Constant.Hinhthucthanhtoav2.Taivanphong)
                                            {
                                                color = "";
                                            }
                                            else if (objthanhtoan.IdHinhThuc == Constant.Hinhthucthanhtoav2.VtcPay)
                                            {
                                                color = "#E7432A";
                                            }
                                            else if (objthanhtoan.IdHinhThuc == Constant.Hinhthucthanhtoav2.VnPay)
                                            {
                                                color = "#E7432A";
                                            }
                                            else
                                            {
                                                color = "#0b388e";
                                            }
                                        }
                                        else
                                        {
                                            color = "#0b388e";
                                        }
                                    }
                                    <span style="color:@color"> @(item.TotalPrice.HasValue ? item.TotalPrice.Value.ToString("n0") : "")</span>
                                </td>
                                <td style="white-space: nowrap;">
                                    @{
                                        var indexticket = 0;
                                        var lstticket = GetlistTicket(item.ID);
                                        foreach (var itemTicket in lstticket)
                                        {
                                            @ThongTinChuyenBay(itemTicket) @item.Ways
                                            if (indexticket < lstticket.Count - 1 && lstticket.Count > 1)
                                            {
                                                <br />
                                            }
                                            indexticket++;
                                        }
                                    }
                                </td>
                                <td>
                                    @item.Name
                                    <br />
                                    @item.Phone
                                </td>

                                <td>
                                    @if (item.Status == Constant.StatusVe.DangGiuCho)
                                    {
                                        <span class="label label-sm arrowed-in label-warning">@Utility.GetDictionaryValue(Constant.StatusVe.dctName, item.Status)</span>
                                    }
                                    else if (item.Status == Constant.StatusVe.DaXuatVe)
                                    {
                                        <span class="label label-sm arrowed-in label-success">@Utility.GetDictionaryValue(Constant.StatusVe.dctName, item.Status)</span>
                                    }
                                    else if (item.Status == Constant.StatusVe.DaHuyVe)
                                    {
                                        <span class="label label-sm arrowed-in label-danger">@Utility.GetDictionaryValue(Constant.StatusVe.dctName, item.Status)</span>
                                    }
                                    else
                                    {
                                        <span class="label label-sm arrowed-in label-default">@Utility.GetDictionaryValue(Constant.StatusVe.dctName, item.Status)</span>
                                    }
                                </td>
                                <td>
                                    @{
                                        var classuser = "";
                                        string user = "";
                                        user = item.UserId;
                                        if (item.UserId == Constant.KL)
                                        {
                                            classuser = "badge badge-primary";
                                        }
                                        else
                                        {

                                            if (item.UserId != Constant.KL)
                                            {
                                                if (VDMMutiline.Core.GetlistCommon.CheckGroupUser(17, item.UserId))
                                                {
                                                    classuser = "badge badge-info";
                                                }
                                                if (VDMMutiline.Core.GetlistCommon.CheckGroupUser(18, item.UserId))
                                                {
                                                    classuser = "badge badge-warning";
                                                }
                                                else
                                                {
                                                    classuser = "badge badge-primary";
                                                }
                                            }
                                            else
                                            {
                                                classuser = "badge badge-primary";
                                            }
                                        }

                                    }
                                    <span class=" @(classuser)">@user</span>
                                    <br />
                                    @(item.CreatedDate.HasValue ? item.CreatedDate.Value.ToString("dd/MM/yyyy HH:mm") : "")
                                </td>
                                <td>@item.Note</td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <div class=" action-buttons">
                                            <a class="btn btn-info btn-float actiontable" title="Cập nhập thông tin" href="@Url.Action("Create", "QuanLyVeDaDat", new { id = item.ID })">
                                                <i class="ace-icon fa fa-pencil bigger-130"></i>
                                            </a>
                                            <a class="btn btn-danger btn-float actiontable" title="Xóa thông tin" href="@Url.Action("Delete", "QuanLyVeDaDat", new { id = item.ID, @ReturnUrl = Server.UrlEncode(Request.Url.ToString()) })">
                                                <i class="ace-icon fa fa-trash-o bigger-130"></i>
                                            </a>
                                        </div>

                                    </div>
                                </td>
                            </tr>
                                }
                            }
                        </tbody>
                    </table>
                    @Html.PagedListPager(Model.PagedList, page => Url.Action("Expired", new { page, thoigiandatcho = Model.BookingFilter.TuNgayDenNgay, booker = Model.BookingFilter.TaiKhoan, trangthaive = Model.BookingFilter.StatusVe, hangvanchuyen = Model.BookingFilter.AirlineCode, seach = Model.BookingFilter.Search }))
                </div>
            </div>
        </div>
    </div>
</div>

<link href="/Content/daterangepicker/daterangepicker-bs3.css" rel="stylesheet" />
<script src="/Content/daterangepicker/daterangepicker.js"></script>
@section scripts {
    <script>

        var eventHandler = function (name) {
            return function () {
            };
        };
        var $select = $('#BookingFilter_TaiKhoan').selectize({
            create: false,
            maxItems: 1,
            onChange: eventHandler('onChange'),
            onItemAdd: eventHandler('onItemAdd'),
            onItemRemove: eventHandler('onItemRemove'),
            onOptionAdd: eventHandler('onOptionAdd'),
            onOptionRemove: eventHandler('onOptionRemove'),
            onDropdownOpen: eventHandler('onDropdownOpen'),
            onDropdownClose: eventHandler('onDropdownClose'),
            onFocus: eventHandler('onFocus'),
            onBlur: eventHandler('onBlur'),
            onInitialize: eventHandler('onInitialize'),
        });
    </script>
    <script>
        $('#BookingFilter_TuNgayDenNgay').daterangepicker({
            format: 'DD/MM/YYYY',
        });
    </script>
}


